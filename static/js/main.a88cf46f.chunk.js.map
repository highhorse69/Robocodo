{"version":3,"sources":["reportWebVitals.js","Card.js","Cardlist.js","SearchBox.js","constant.js","App.js","action.js","reducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","SEARCH_FIELD","PENDING_ROBOTS","SUCCESS_ROBOTS","FAILED_ROBOTS","App","this","props","onRoboChange","searchField","onSearchChange","filterRobots","isPending","error","filter","abc","toLowerCase","includes","SearchBox","Component","connect","state","searchRobots","getRobots","dispatch","event","text","target","value","payload","fetch","response","json","data","catch","initialState","rState","logger","createLogger","r","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a88cf46f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nconst Card= ({name,email,id}) =>{\n\n\nreturn(\n    \n    <div className=' tc bg-light-green dib br3 pad3 ma2 grow bw2 shadow-5'>\n\n      <img alt='myimage' src={`https://robohash.org/${id}?200*200`}  />\n    \n     <div>\n\n       <h2>{name}</h2>\n       <p>{email}</p>\n\n     </div>\n\n\n     </div>\n\n    );\n}\n\n\n\nexport default Card","import React from 'react';\nimport Card from './Card'\n\n\nconst Cardlist= ({robots}) =>{\n\n\nreturn(\n\n\n\n    robots.map((user,i)=>{\n return <Card \n          key={i}\n          name={robots[i].name} \n          id={robots[i].id} \n          email={robots[i].email}\n        />  \n})\n   \n\n    );\n}\n\n\n\nexport default Cardlist","import React from 'react';\n\n\n\n\nconst Searchbox = ({searchChange}) =>\n{\n    return(\n        <div className='pa2'>\n\n     <input \n     className='pa3 ba b--green bg-lightest-blue'\n     type='search'\n      placeholder='search robots'\n      onChange={searchChange}\n\n      \n      />\n\n     </div>\n        );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Searchbox;"," export const SEARCH_FIELD='SEARCH_FIELD';\n\n export const PENDING_ROBOTS='PENDING_ROBOTS';\n export const SUCCESS_ROBOTS='SUCCESS_ROBOTS';\n export const FAILED_ROBOTS='FAILED_ROBOTS';","import React,{Component} from 'react';\nimport Cardlist from './Cardlist';\nimport {connect} from 'react-redux';\nimport SearchBox from './SearchBox';\nimport './App.css';\n//import {robots} from './Robots';\n\nimport {setSearchField,roboSearch} from './action.js'\n\n\n\nconst mapStateToProps=state=>{\n\n  return{\n    searchField:state.searchRobots.searchField,\n    robots:state.getRobots.robots,\n    isPending:state.getRobots.isPending,\n    error:state.getRobots.error\n  }\n}\n\n  const mapDispatchToProps=(dispatch)=>{\n   \n    return{\n      onSearchChange:(event)=>dispatch(setSearchField(event.target.value)),\n      onRoboChange:()=>dispatch(roboSearch())\n}\n  }\n\nclass App extends Component\n\n{ \n \n\ncomponentDidMount()\n{\n \n this.props.onRoboChange();\n}\n\n\n\n    render(){\n      \n      const {searchField,onSearchChange,robots,isPending,error}=this.props;\n       const filterRobots=robots.filter(abc=>{\n    return abc.name.toLowerCase().includes(searchField.toLowerCase())\n     })\n         \n   \n    return(\n    <div className='tc'>\n              <h1 className='f1'>ROBOMONO</h1>\n     <SearchBox searchChange={onSearchChange} />              \n    \n <Cardlist robots={filterRobots} />\n             \n    </div>\n  );\n\n\n    }\n}\n\n\n\n\n\n\n\n\nexport default connect(mapStateToProps , mapDispatchToProps)(App);\n","import {SEARCH_FIELD,\n        PENDING_ROBOTS,\n        SUCCESS_ROBOTS,\n        FAILED_ROBOTS} from './constant.js'\n\n\nexport const setSearchField = (text)=> {\nreturn {\n\n    type: SEARCH_FIELD,\n    payload: text\n}\n}\n\nexport const roboSearch=()=>(dispatch)=>{\n\n    dispatch({type:PENDING_ROBOTS});\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(data=>dispatch({type:SUCCESS_ROBOTS,payload:data}))\n    .catch(error=>dispatch({type:FAILED_ROBOTS,payload:error}) )   \n  \n}\n\n","import {SEARCH_FIELD,\n        PENDING_ROBOTS,\n        SUCCESS_ROBOTS,\n        FAILED_ROBOTS} from './constant.js';\n\n\nconst initialState={\n\n    searchField:''\n\n}\n\n\n\n\nexport const searchRobots=(state=initialState , action={})=>{\n \n\n switch(action.type){\n   case SEARCH_FIELD:\n   return Object.assign({}, state,{searchField:action.payload});\n\n  default:\n\n  return state;\n}}\n\nconst rState={\n  isPending:false,\n  robots:[],\n  error:''\n}\n\nexport const getRobots=(state=rState, action={})=>{\n\n  switch(action.type){\n\n    case PENDING_ROBOTS:\n    return Object.assign({},state,{isPending:false})\n\n    case SUCCESS_ROBOTS:\n    return Object.assign({},state,{robots:action.payload ,isPending:true});\n\n    case FAILED_ROBOTS:\n    return Object.assign({},state,{error:action.payload ,isPending:true});\n    \n    default:\n    return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'tachyons' ;\nimport {createStore ,applyMiddleware,combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport {createLogger} from 'redux-logger';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App.js';\nimport {searchRobots,getRobots} from './reducer';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst logger=createLogger();\n\nconst r=combineReducers({searchRobots,getRobots});\n\n\nconst store=createStore(r,applyMiddleware(thunkMiddleware,logger));\n\nReactDOM.render(\n   \n    <Provider store={store}>\n<App/>\n</Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}